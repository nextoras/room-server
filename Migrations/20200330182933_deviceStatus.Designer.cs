// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using sketch_mar21a;

namespace sketch_mar21a.Migrations
{
    [DbContext(typeof(weatherContext))]
    [Migration("20200330182933_deviceStatus")]
    partial class deviceStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("sketch_mar21a.Days", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date");

                    b.Property<double?>("Humidity");

                    b.Property<double?>("Temperature");

                    b.HasKey("Id");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("sketch_mar21a.DeviceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Fan");

                    b.Property<bool>("HeatingFan");

                    b.HasKey("Id");

                    b.ToTable("DeviceStatus");
                });

            modelBuilder.Entity("sketch_mar21a.Hours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date");

                    b.Property<double?>("Humidity");

                    b.Property<double?>("Temperature");

                    b.HasKey("Id");

                    b.ToTable("Hours");
                });

            modelBuilder.Entity("sketch_mar21a.Minutes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date");

                    b.Property<double?>("Humidity");

                    b.Property<double?>("Temperature");

                    b.HasKey("Id");

                    b.ToTable("Minutes");
                });

            modelBuilder.Entity("sketch_mar21a.Mounths", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date");

                    b.Property<double?>("Humidity");

                    b.Property<double?>("Temperature");

                    b.HasKey("Id");

                    b.ToTable("Mounths");
                });

            modelBuilder.Entity("sketch_mar21a.Seconds", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id");

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date");

                    b.Property<double?>("Humidity")
                        .HasColumnName("humidity");

                    b.Property<double?>("Temperature")
                        .HasColumnName("temperature");

                    b.HasKey("Id");

                    b.ToTable("seconds");
                });

            modelBuilder.Entity("sketch_mar21a.Weeks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date");

                    b.Property<double?>("Humidity");

                    b.Property<double?>("Temperature");

                    b.HasKey("Id");

                    b.ToTable("Weeks");
                });
#pragma warning restore 612, 618
        }
    }
}
